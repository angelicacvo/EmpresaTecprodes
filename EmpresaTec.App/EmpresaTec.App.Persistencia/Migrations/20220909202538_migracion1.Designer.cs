// <auto-generated />
using System;
using EmpresaTec.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmpresaTec.App.Persistencia.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220909202538_migracion1")]
    partial class migracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmpresaTec.App.Dominio.ActualState", b =>
                {
                    b.Property<int>("actualStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("actualStateId");

                    b.ToTable("ActualStates");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Login", b =>
                {
                    b.Property<int>("loginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("lastConnection")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("loginId");

                    b.HasIndex("UserId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Project", b =>
                {
                    b.Property<int>("projectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ServicesId")
                        .HasColumnType("int");

                    b.Property<int?>("actualStateId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("cost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("stimatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("projectId");

                    b.HasIndex("ServicesId");

                    b.HasIndex("actualStateId");

                    b.HasIndex("userId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Services", b =>
                {
                    b.Property<int>("servicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("servicesId");

                    b.ToTable("services");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("projectId")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.HasIndex("projectId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Login", b =>
                {
                    b.HasOne("EmpresaTec.App.Dominio.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Project", b =>
                {
                    b.HasOne("EmpresaTec.App.Dominio.Services", "services")
                        .WithMany("projects")
                        .HasForeignKey("ServicesId");

                    b.HasOne("EmpresaTec.App.Dominio.ActualState", "actualState")
                        .WithMany("projects")
                        .HasForeignKey("actualStateId");

                    b.HasOne("EmpresaTec.App.Dominio.User", null)
                        .WithMany("projects")
                        .HasForeignKey("userId");

                    b.Navigation("actualState");

                    b.Navigation("services");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.User", b =>
                {
                    b.HasOne("EmpresaTec.App.Dominio.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.Navigation("project");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.ActualState", b =>
                {
                    b.Navigation("projects");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.Services", b =>
                {
                    b.Navigation("projects");
                });

            modelBuilder.Entity("EmpresaTec.App.Dominio.User", b =>
                {
                    b.Navigation("projects");
                });
#pragma warning restore 612, 618
        }
    }
}
